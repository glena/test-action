name: Update production PR gate
description: "Looks for release PRs and updates the production state"

inputs:
  context:
    required: true
    description: "Commit status context"
  GITHUB_TOKEN:
    required: true
    description: "The action GH token"
  path: 
    required: false
    description: "The directory where the repo was cheched out"
    default: "."

runs:
  using: "composite"
  steps:
    - name: Find open staging PR
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      run: |
        cd ${{ inputs.path }}; STAGING_PR_COMMIT=$(gh pr list -B staging -s open --json commits -q ".|first.commits|last.oid")
        echo "STAGING_PR_COMMIT=$STAGING_PR_COMMIT" >> $GITHUB_ENV
    - name: Assert no open staging PR
      shell: bash
      if: ${{ env.STAGING_PR_COMMIT != '' }}
      run: exit 1
    - name: Find open production PR
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      run: |
        cd ${{ inputs.path }}; PROD_PR_COMMIT=$(gh pr list -B production -s open --json commits -q ".|first.commits|last.oid")
        echo "PROD_PR_COMMIT=$PROD_PR_COMMIT" >> $GITHUB_ENV
    - name: Push commit state
      shell: bash
      if: ${{ env.PROD_PR_COMMIT != '' }}
      env:
        COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        GH_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      run: |
        gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/statuses/${{ env.PROD_PR_COMMIT }} \
          -f state='success' \
          -f target_url="https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}" \
          -f description="$TITLE" \
          -f context="${{ inputs.context }}"
